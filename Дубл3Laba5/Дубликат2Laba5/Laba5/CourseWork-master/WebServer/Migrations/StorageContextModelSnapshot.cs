// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebServer.Data;

#nullable disable

namespace WebServer.Migrations
{
    [DbContext(typeof(StorageContext))]
    partial class StorageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebServer.Data.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("amount");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<string>("Expenses")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("expenses");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("terms");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_cargos");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_cargos_customer_id");

                    b.ToTable("cargos", (string)null);
                });

            modelBuilder.Entity("WebServer.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.Property<string>("Tarriff")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tarriff");

                    b.HasKey("Id")
                        .HasName("pk_customers");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("WebServer.Data.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("amount");

                    b.Property<int>("CargoId")
                        .HasColumnType("integer")
                        .HasColumnName("cargo_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_transports");

                    b.HasIndex("CargoId")
                        .HasDatabaseName("ix_transports_cargo_id");

                    b.ToTable("transports", (string)null);
                });

            modelBuilder.Entity("WebServer.Data.Models.Cargo", b =>
                {
                    b.HasOne("WebServer.Data.Models.Customer", "Customer")
                        .WithMany("Cargos")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cargos_customers_customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebServer.Data.Models.Transport", b =>
                {
                    b.HasOne("WebServer.Data.Models.Cargo", "Cargo")
                        .WithMany("Transports")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transports_cargos_cargo_id");

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("WebServer.Data.Models.Cargo", b =>
                {
                    b.Navigation("Transports");
                });

            modelBuilder.Entity("WebServer.Data.Models.Customer", b =>
                {
                    b.Navigation("Cargos");
                });
#pragma warning restore 612, 618
        }
    }
}
